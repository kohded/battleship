BattleShip

placeShip() - During setup the placeShip method is called each time a ship is trying to be placed on the defensive board. From the controller the method will be passed one enum ShipTypes(AIRCRAFT, or BATTLESHIP, or CRUISER, or DESTROYER), one enum Direction(VERTICAL, or HORIZONTAL, or DIAGONAL), and both int Location(row, col). Before a ship can be placed the isPlaceShipLegal method will be called to check if the placement of the ship is legal. It will check if the ship placement is within the board, if it doesn't cross another ship, and if a square isn't occupied by another ship. If these conditions are met, the ship will be placed on the defensive board by calling the Player.getShipDefensiveBoard. The 2D array contained within the getShipDefensiveBoard method will be filled with the ship characters. Then the view on the defensive players defensive board will display the newly added ship. 
Player one will get a count of 5 successful ship placements, then the placeShip method will be switched to player two and the previous steps will be repeated until 5 successful ship placements. Once a total of 10 successful ship placements are reached from both players, the method will return a message that ships can no longer be placed if it is called over this total. After player two finishes placing there ships, the active player will be switched back to player one and the play method will be initialized.
QUESTION?????
How do we access/call the Player.getShipDefensiveBoard if its not implemented in the BattleShipMain?


makeShot() - During play the makeShot method will start with player one and while a player is in offensive mode. When a square is clicked in the view, the controller will pass this method an int Location(x, y), and an int player. Before a shot can be placed the isMakeShotLegal method will be called to check if a shot is legal. It will check if a square isn't already contained with a previous shot. If this condition is met the shot will be placed on the offensive players offensive board, and the defensive players defensive board by calling Player.placeShotResult. The placeShotResult method will check if the shot is a hit or a miss, and then call Player.getOffensiveBoard and Player.getShipDefensiveBoard to add a character into the 2D arrays for the corresonding square that was clicked. The placeShotResult OR makeShot method will return an enum Status(HIT or MISS) to the controller, and update the view. If the shot is a hit the squares will be marked with the character '?XCHARACTER1?', otherwise the squares will be marked with the character '?OCHARACTER2?' for a miss. Any offensive player will continue to make shots until they miss, then the method will return an enum Status MISS, and the players will switch modes.
QUESTION?????
For int player where is this value from? Couldn't we get this from PlayerInterface[] getPlayers()?
What do we want these to be? '?XCHARACTER1?','?XCHARACTER2?'
Is the view or controller keeping track of the HIT or MISS from the Status?
Why is makeShot and placeShotResult both returning the Status? I don't know which method returns the Status to the controller
Which method checks if there is a hit or a miss placeShotResult or isHit? We commented out isHit...